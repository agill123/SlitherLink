   public void cornerRule() throws ContradictionException{
        //if there is a number in a corner
       if(count[0][0]==3){
           model.sum(new IntVar[]{a[0][1],a[1][0],a[1][n],a[n][1]},"=",2).post();
       }
       if(count[0][0]==2){

       }
        if(count[0][0]==1){
            model.sum(new IntVar[]{a[0][1],a[1][0],a[1][n],a[n][1]},"=",0).post();

        }

        if(count[0][n-2]==3){
            model.sum(new IntVar[]{a[n-2][n-1],a[n-1][n-2],a[n-1][(n-1)+n],a[(n-1)+n][n-1]},"=",2).post();
        }
        if(count[0][n-2]==2){

        }
        if(count[0][n-2]==1){
            model.sum(new IntVar[]{a[n-2][n-1],a[n-1][n-2],a[n-1][(n-1)+n],a[(n-1)+n][n-1]},"=",0).post();

        }
        if(count[n-2][0]==3){
            model.sum(new IntVar[]{a[((n*n)-n)-n][(n*n)-n],a[(n*n)-n][((n*n)-n)-n],a[(n*n)-n][(n*n)-n+1],a[(n*n)-n+1][(n*n)-n]},"=",2).post();

        }
        if(count[n-2][0]==2){

        }
        if(count[n-2][0]==1){
            model.sum(new IntVar[]{a[((n*n)-n)-n][(n*n)-n],a[(n*n)-n][((n*n)-n)-n],a[(n*n)-n][(n*n)-n+1],a[(n*n)-n+1][(n*n)-n]},"=",0).post();

        }
        if(count[n-2][n-2]==3){
            model.sum(new IntVar[]{a[((n*n)-1)-n][(n*n)-1],a[(n*n)-1][((n*n)-1)-n],a[(n*n)-1-1][(n*n)-1],a[(n*n)-1][(n*n)-1-1]},"=",2).post();
        }
        if(count[n-2][n-2]==2){

        }
        if(count[n-2][n-2]==1){
            model.sum(new IntVar[]{a[((n*n)-1)-n][(n*n)-1],a[(n*n)-1][((n*n)-1)-n],a[(n*n)-1-1][(n*n)-1],a[(n*n)-1][(n*n)-1-1]},"=",0).post();

        }

    }